<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Advanced" xml:space="preserve">
    <value>Дополнительно</value>
  </data>
  <data name="AreYouWantRebuild" xml:space="preserve">
    <value>Вы точно хотите перестроить все индексы?</value>
  </data>
  <data name="CalcDirsCount" xml:space="preserve">
    <value>Подсчёт количества папок...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CaseSensitiveSearch" xml:space="preserve">
    <value>Поиск зависит от регистра</value>
  </data>
  <data name="ConfigureFileMasksToExcludeUnusedItems" xml:space="preserve">
    <value>Настройка масок на пути файлов для исключения</value>
  </data>
  <data name="ConfigureFilesFoldersToCreateIndex" xml:space="preserve">
    <value>Настройка папок для создания индекса</value>
  </data>
  <data name="ConfigureFilesTypesToCreateIndex" xml:space="preserve">
    <value>Настройка типов файлов для создания индекса</value>
  </data>
  <data name="CreateIndexes" xml:space="preserve">
    <value>Создание индексов..</value>
  </data>
  <data name="DecodeComments" xml:space="preserve">
    <value>Включать комментарии</value>
  </data>
  <data name="DecodeStrings" xml:space="preserve">
    <value>Включать строки</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="ErrorLoadingFile" xml:space="preserve">
    <value>Не могу загрузить файл!</value>
  </data>
  <data name="ExecutablePath" xml:space="preserve">
    <value>Путь к просмотрщику:</value>
  </data>
  <data name="FileMasksToExclude" xml:space="preserve">
    <value>Маски на пути файлов для исключения</value>
  </data>
  <data name="FileParsing" xml:space="preserve">
    <value>Обработка файла</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Файлов:</value>
  </data>
  <data name="FilesAndFoldersToSearch" xml:space="preserve">
    <value>Файлы и папки для поиска</value>
  </data>
  <data name="FileTypes" xml:space="preserve">
    <value>Типы файлов:</value>
  </data>
  <data name="FileTypesToInclude" xml:space="preserve">
    <value>Искать типы файлов</value>
  </data>
  <data name="FillResultsTime" xml:space="preserve">
    <value>Заполнение результатов:</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Папка:</value>
  </data>
  <data name="FoldersToSearch" xml:space="preserve">
    <value>Папки для поиска</value>
  </data>
  <data name="FullTextSearch" xml:space="preserve">
    <value>Полнотекстовый поиск</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>Искать</value>
  </data>
  <data name="IndexSettings" xml:space="preserve">
    <value>Настройка индексов</value>
  </data>
  <data name="LoadFileOnSelect" xml:space="preserve">
    <value>Загружать файл при выборе</value>
  </data>
  <data name="LoadFileTime" xml:space="preserve">
    <value>Загрузка файла:</value>
  </data>
  <data name="LoadIndexes" xml:space="preserve">
    <value>Загрузка индексов..</value>
  </data>
  <data name="PluginDescription" xml:space="preserve">
    <value>Возможность поиска текста и файлов по имени в проектах с огромным количеством файлов.</value>
  </data>
  <data name="PluginName" xml:space="preserve">
    <value>Ищейка</value>
  </data>
  <data name="ProgressString" xml:space="preserve">
    <value>Папок: {0}  время: {1}  скорость: {2} кб/с</value>
  </data>
  <data name="RebuildIndexes" xml:space="preserve">
    <value>Перестроить индексы...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск...</value>
  </data>
  <data name="SearchCount" xml:space="preserve">
    <value>Количество результатов в поиске:</value>
  </data>
  <data name="SearchMode" xml:space="preserve">
    <value>Режим поиска:</value>
  </data>
  <data name="SearchResultsView" xml:space="preserve">
    <value>Результаты поиска</value>
  </data>
  <data name="SearchTime" xml:space="preserve">
    <value>Поиск:</value>
  </data>
  <data name="SearchType" xml:space="preserve">
    <value>Тип поиска:</value>
  </data>
  <data name="SkipComments" xml:space="preserve">
    <value>Пропускать комментарии</value>
  </data>
  <data name="Starting_CollectMemory" xml:space="preserve">
    <value>Выделение памяти</value>
  </data>
  <data name="Starting_CreatingEngine" xml:space="preserve">
    <value>Создание движка</value>
  </data>
  <data name="Starting_LoadingFileData" xml:space="preserve">
    <value>Загружаю файл с данными</value>
  </data>
  <data name="Starting_LoadingFileNames" xml:space="preserve">
    <value>Загружаю файл с именами</value>
  </data>
  <data name="TextToSearch" xml:space="preserve">
    <value>Текст для поиска:</value>
  </data>
  <data name="ToBigFile" xml:space="preserve">
    <value>Слишком большой файл: {0}!</value>
  </data>
  <data name="UnloadIndexes" xml:space="preserve">
    <value>Выгрузить индексы..</value>
  </data>
  <data name="Word" xml:space="preserve">
    <value>Слово:</value>
  </data>
  <data name="Words" xml:space="preserve">
    <value>Слов:</value>
  </data>
  <data name="TextDontContainSearchableSymbols" xml:space="preserve">
    <value>В тексте нет символов по которым возможен поиск</value>
  </data>
</root>