//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarketClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plugin", Namespace="http://schemas.datacontract.org/2004/07/MarketInterfaces")]
    [System.SerializableAttribute()]
    public partial class Plugin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DependensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPluginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UploadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Dependenses {
            get {
                return this.DependensesField;
            }
            set {
                if ((object.ReferenceEquals(this.DependensesField, value) != true)) {
                    this.DependensesField = value;
                    this.RaisePropertyChanged("Dependenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlugin {
            get {
                return this.IsPluginField;
            }
            set {
                if ((this.IsPluginField.Equals(value) != true)) {
                    this.IsPluginField = value;
                    this.RaisePropertyChanged("IsPlugin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Uploads {
            get {
                return this.UploadsField;
            }
            set {
                if ((this.UploadsField.Equals(value) != true)) {
                    this.UploadsField = value;
                    this.RaisePropertyChanged("Uploads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bug", Namespace="http://schemas.datacontract.org/2004/07/MarketInterfaces")]
    [System.SerializableAttribute()]
    public partial class Bug : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PluginUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PluginUID {
            get {
                return this.PluginUIDField;
            }
            set {
                if ((this.PluginUIDField.Equals(value) != true)) {
                    this.PluginUIDField = value;
                    this.RaisePropertyChanged("PluginUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMarketService")]
    public interface IMarketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_GetList", ReplyAction="http://tempuri.org/IMarketService/Plugin_GetListResponse")]
        MarketClient.ServiceReference.Plugin[] Plugin_GetList(MarketClient.ServiceReference.Plugin filter, int offset, int count, System.Nullable<bool> onlyPlugins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_GetListCount", ReplyAction="http://tempuri.org/IMarketService/Plugin_GetListCountResponse")]
        int Plugin_GetListCount(MarketClient.ServiceReference.Plugin filter);
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadContract) of message DownloadContract does not match the default value (Plugin_Download)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_Download", ReplyAction="http://tempuri.org/IMarketService/Plugin_DownloadResponse")]
        MarketClient.ServiceReference.DataContract Plugin_Download(MarketClient.ServiceReference.DownloadContract request);
        
        // CODEGEN: Generating message contract since the wrapper name (PluginUploadContract) of message PluginUploadContract does not match the default value (Plugin_Upload)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_Upload", ReplyAction="http://tempuri.org/IMarketService/Plugin_UploadResponse")]
        MarketClient.ServiceReference.UploadContract Plugin_Upload(MarketClient.ServiceReference.PluginUploadContract request);
        
        // CODEGEN: Generating message contract since the wrapper name (PluginUploadContract) of message PluginUploadContract does not match the default value (Plugin_Upgrade)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_Upgrade", ReplyAction="http://tempuri.org/IMarketService/Plugin_UpgradeResponse")]
        MarketClient.ServiceReference.UploadContract Plugin_Upgrade(MarketClient.ServiceReference.PluginUploadContract request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_Delete", ReplyAction="http://tempuri.org/IMarketService/Plugin_DeleteResponse")]
        bool Plugin_Delete(MarketClient.ServiceReference.Plugin plugin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Plugin_Exist", ReplyAction="http://tempuri.org/IMarketService/Plugin_ExistResponse")]
        bool Plugin_Exist(MarketClient.ServiceReference.Plugin plugin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Bug_GetList", ReplyAction="http://tempuri.org/IMarketService/Bug_GetListResponse")]
        MarketClient.ServiceReference.Bug[] Bug_GetList(long uid, int offset, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Bug_GetListCount", ReplyAction="http://tempuri.org/IMarketService/Bug_GetListCountResponse")]
        int Bug_GetListCount(long uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Bug_Send", ReplyAction="http://tempuri.org/IMarketService/Bug_SendResponse")]
        void Bug_Send(MarketClient.ServiceReference.Bug bug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Author_GetList", ReplyAction="http://tempuri.org/IMarketService/Author_GetListResponse")]
        string[] Author_GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketService/Type_GetList", ReplyAction="http://tempuri.org/IMarketService/Type_GetListResponse")]
        string[] Type_GetList();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadContract", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadContract {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Author;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Name;
        
        public DownloadContract() {
        }
        
        public DownloadContract(string Author, string Name) {
            this.Author = Author;
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DataContract", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DataContract {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public Common.Data.Pair<string, int>[] Descriptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public DataContract() {
        }
        
        public DataContract(Common.Data.Pair<string, int>[] Descriptions, long Length, System.IO.Stream FileByteStream) {
            this.Descriptions = Descriptions;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PluginUploadContract", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PluginUploadContract {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public Common.Data.Pair<string, int>[] Descriptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public MarketClient.ServiceReference.Plugin Item;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public PluginUploadContract() {
        }
        
        public PluginUploadContract(Common.Data.Pair<string, int>[] Descriptions, MarketClient.ServiceReference.Plugin Item, long Length, System.IO.Stream FileByteStream) {
            this.Descriptions = Descriptions;
            this.Item = Item;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadContract", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadContract {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Exist;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Success;
        
        public UploadContract() {
        }
        
        public UploadContract(bool Exist, bool Success) {
            this.Exist = Exist;
            this.Success = Success;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarketServiceChannel : MarketClient.ServiceReference.IMarketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarketServiceClient : System.ServiceModel.ClientBase<MarketClient.ServiceReference.IMarketService>, MarketClient.ServiceReference.IMarketService {
        
        public MarketServiceClient() {
        }
        
        public MarketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MarketClient.ServiceReference.Plugin[] Plugin_GetList(MarketClient.ServiceReference.Plugin filter, int offset, int count, System.Nullable<bool> onlyPlugins) {
            return base.Channel.Plugin_GetList(filter, offset, count, onlyPlugins);
        }
        
        public int Plugin_GetListCount(MarketClient.ServiceReference.Plugin filter) {
            return base.Channel.Plugin_GetListCount(filter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MarketClient.ServiceReference.DataContract MarketClient.ServiceReference.IMarketService.Plugin_Download(MarketClient.ServiceReference.DownloadContract request) {
            return base.Channel.Plugin_Download(request);
        }
        
        public Common.Data.Pair<string, int>[] Plugin_Download(string Author, string Name, out long Length, out System.IO.Stream FileByteStream) {
            MarketClient.ServiceReference.DownloadContract inValue = new MarketClient.ServiceReference.DownloadContract();
            inValue.Author = Author;
            inValue.Name = Name;
            MarketClient.ServiceReference.DataContract retVal = ((MarketClient.ServiceReference.IMarketService)(this)).Plugin_Download(inValue);
            Length = retVal.Length;
            FileByteStream = retVal.FileByteStream;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MarketClient.ServiceReference.UploadContract MarketClient.ServiceReference.IMarketService.Plugin_Upload(MarketClient.ServiceReference.PluginUploadContract request) {
            return base.Channel.Plugin_Upload(request);
        }
        
        public bool Plugin_Upload(Common.Data.Pair<string, int>[] Descriptions, MarketClient.ServiceReference.Plugin Item, long Length, System.IO.Stream FileByteStream, out bool Success) {
            MarketClient.ServiceReference.PluginUploadContract inValue = new MarketClient.ServiceReference.PluginUploadContract();
            inValue.Descriptions = Descriptions;
            inValue.Item = Item;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            MarketClient.ServiceReference.UploadContract retVal = ((MarketClient.ServiceReference.IMarketService)(this)).Plugin_Upload(inValue);
            Success = retVal.Success;
            return retVal.Exist;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MarketClient.ServiceReference.UploadContract MarketClient.ServiceReference.IMarketService.Plugin_Upgrade(MarketClient.ServiceReference.PluginUploadContract request) {
            return base.Channel.Plugin_Upgrade(request);
        }
        
        public bool Plugin_Upgrade(Common.Data.Pair<string, int>[] Descriptions, MarketClient.ServiceReference.Plugin Item, long Length, System.IO.Stream FileByteStream, out bool Success) {
            MarketClient.ServiceReference.PluginUploadContract inValue = new MarketClient.ServiceReference.PluginUploadContract();
            inValue.Descriptions = Descriptions;
            inValue.Item = Item;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            MarketClient.ServiceReference.UploadContract retVal = ((MarketClient.ServiceReference.IMarketService)(this)).Plugin_Upgrade(inValue);
            Success = retVal.Success;
            return retVal.Exist;
        }
        
        public bool Plugin_Delete(MarketClient.ServiceReference.Plugin plugin) {
            return base.Channel.Plugin_Delete(plugin);
        }
        
        public bool Plugin_Exist(MarketClient.ServiceReference.Plugin plugin) {
            return base.Channel.Plugin_Exist(plugin);
        }
        
        public MarketClient.ServiceReference.Bug[] Bug_GetList(long uid, int offset, int count) {
            return base.Channel.Bug_GetList(uid, offset, count);
        }
        
        public int Bug_GetListCount(long uid) {
            return base.Channel.Bug_GetListCount(uid);
        }
        
        public void Bug_Send(MarketClient.ServiceReference.Bug bug) {
            base.Channel.Bug_Send(bug);
        }
        
        public string[] Author_GetList() {
            return base.Channel.Author_GetList();
        }
        
        public string[] Type_GetList() {
            return base.Channel.Type_GetList();
        }
    }
}
